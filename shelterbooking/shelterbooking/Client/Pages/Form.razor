@using shelterbooking.Shared

<EditForm Model="@prop" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group ">
        <div>
            <label>Properties-objekt_id :</label>
            <div>
                <InputText @bind-Value="@prop.objekt_id" />
                <ValidationMessage For="@(() => prop.objekt_id)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-cvr_kode :</label>
            <div>
                <InputNumber @bind-Value="@prop.cvr_kode" />
                <ValidationMessage For="@(() => prop.cvr_kode)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-cvr_navn :</label>
            <div>
                <InputText @bind-Value="@prop.cvr_navn" />
                <ValidationMessage For="@(() => prop.cvr_navn)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-kommunekode :</label>
            <div>
                <InputNumber @bind-Value="@prop.kommunekode" />
                <ValidationMessage For="@(() => prop.kommunekode)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-facil_ty :</label>
            <div>
                <InputText @bind-Value="@prop.facil_ty" />
                <ValidationMessage For="@(() => prop.facil_ty)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-navn :</label>
            <div>
                <InputText @bind-Value="@prop.navn" />
                <ValidationMessage For="@(() => prop.navn)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-beskrivels :</label>
            <div>
                <InputText @bind-Value="@prop.beskrivels" />
                <ValidationMessage For="@(() => prop.beskrivels)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-lang_beskr :</label>
            <div>
                <InputText @bind-Value="@prop.lang_beskr" />
                <ValidationMessage For="@(() => prop.lang_beskr)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-antal_pl :</label>
            <div>
                <InputNumber @bind-Value="@prop.antal_pl" />
                <ValidationMessage For="@(() => prop.antal_pl)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-ansvar_org :</label>
            <div>
                <InputText @bind-Value="@prop.ansvar_org" />
                <ValidationMessage For="@(() => prop.ansvar_org)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Properties-ansva_v :</label>
            <div>
                <InputText @bind-Value="@prop.ansva_v" />
                <ValidationMessage For="@(() => prop.ansva_v)" />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>
</EditForm>
@code {
    [Parameter] public Properties prop { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    static Random random = new Random();
    public static string GetRandomHexNumber(int digits)
    {
        byte[] buffer = new byte[digits / 2];
        random.NextBytes(buffer);
        string result = String.Concat(buffer.Select(x => x.ToString("X2")).ToArray());
        if (digits % 2 == 0)
            return result;
        return result + random.Next(16).ToString("X");
    }
}