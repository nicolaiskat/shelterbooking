<<<<<<< HEAD
@page "/"
@using shelterbooking.Shared
@inject HttpClient Http
@inject IJSRuntime js
@using System.Net.Http
@inject NavigationManager uriHelper

=======
ï»¿@page "/"
>>>>>>> parent of b7b4e38 (Merge branch 'main' of https://github.com/nicolaiskat/shelterbooking)
<h3>LogIn</h3>
@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
            {

<p>
    Username:
    <input placeholder ="Email" @bind="email" />
    <br />
    Password: 
     <input placeholder ="Password" @bind="password" />
    <br />
<<<<<<< HEAD
<<<<<<< HEAD
    <button class="btn btn-success" @onclick="() => startLogin(email, password)">Login</button>
=======
    <a class="btn btn-primary" @onclick="login">Login</a>

>>>>>>> parent of f085d83 (Merge branch 'main' of https://github.com/nicolaiskat/shelterbooking)
=======
    <a class="btn btn-primary" @onclick="login">Login</a>

>>>>>>> parent of f085d83 (Merge branch 'main' of https://github.com/nicolaiskat/shelterbooking)
    <br />
     <a href="https://localhost:5001/createuser" >Dont have a user?</a>
</p>


}

@code {
    public string email;
    public string password;

<<<<<<< HEAD
    public Bruger[] users;

    protected override async Task OnInitializedAsync()
    {
        users = await Http.GetFromJsonAsync<Bruger[]>("UsersList");
    }

    public void startLogin(string email, string password)
    {
        foreach (var user in users)
        {
            if (user.email == email && user.password == password)
            {
                if (user.level == 0)
                {
                    uriHelper.NavigateTo("fetchdata");

                }
                else if (user.level == 1)
                {
                    uriHelper.NavigateTo("pedelside");
                }
                else
                {
                    js.InvokeVoidAsync("alert", $"User access not permitted");
                }
            }
            else
            {
                js.InvokeVoidAsync("alert", $"Email and/or password incorrect!");
            }
        }
    }
}
=======
                }
                else if (user.level == 1)
                {
                    uriHelper.NavigateTo("fetchdata");
                }
                else
                {
                    await js.InvokeVoidAsync("alert", $"User access not permitted");
                }
            }
            else
            {
                await js.InvokeVoidAsync("alert", $"Email and/or password incorrect!");
            }
        }
    }

}

>>>>>>> parent of b7b4e38 (Merge branch 'main' of https://github.com/nicolaiskat/shelterbooking)
